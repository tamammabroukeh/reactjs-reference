import React, { useCallback } from 'react';
import { useDropzone } from 'react-dropzone';
import { motion } from 'framer-motion';
import { Upload, Image, X } from 'lucide-react';
import { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';
import { Button } from '@/components/ui/button';
import { cn } from '@/lib/utils';
import { ImageFile } from '@/types/gallery';

interface FileUploaderProps {
  isOpen: boolean;
  onClose: () => void;
  onFilesSelected: (files: ImageFile[]) => void;
  maxFiles?: number;
}

export const FileUploader: React.FC<FileUploaderProps> = ({
  isOpen,
  onClose,
  onFilesSelected,
  maxFiles = 20
}) => {
  const onDrop = useCallback((acceptedFiles: File[]) => {
    const imageFiles: ImageFile[] = acceptedFiles.map((file) => ({
      id: crypto.randomUUID(),
      file,
      url: URL.createObjectURL(file),
      name: file.name,
      size: file.size,
      type: file.type
    }));
    
    onFilesSelected(imageFiles);
    onClose();
  }, [onFilesSelected, onClose]);

  const { getRootProps, getInputProps, isDragActive, acceptedFiles } = useDropzone({
    onDrop,
    accept: {
      'image/*': ['.jpeg', '.jpg', '.png', '.gif', '.bmp', '.webp']
    },
    maxFiles,
    multiple: true
  });

  return (
    <Dialog open={isOpen} onOpenChange={onClose}>
      <DialogContent className="sm:max-w-[600px] bg-gallery-surface border-border/50 backdrop-blur-glass">
        <DialogHeader>
          <DialogTitle className="text-foreground flex items-center gap-2">
            <Upload className="h-5 w-5 text-primary" />
            Upload Images
          </DialogTitle>
        </DialogHeader>
        
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.3 }}
          className="space-y-6"
        >
          <div
            {...getRootProps()}
            className={cn(
              "border-2 border-dashed rounded-lg p-8 text-center cursor-pointer transition-all duration-300",
              "hover:border-primary/50 hover:bg-gradient-glow",
              isDragActive
                ? "border-primary bg-primary/5 scale-[1.02]"
                : "border-border/50 bg-gallery-surface"
            )}
          >
            <input {...getInputProps()} />
            
            <motion.div
              animate={{ 
                scale: isDragActive ? 1.1 : 1,
                rotate: isDragActive ? 5 : 0
              }}
              transition={{ type: "spring", stiffness: 300, damping: 20 }}
              className="flex flex-col items-center space-y-4"
            >
              <div className={cn(
                "p-4 rounded-full transition-colors duration-300",
                isDragActive ? "bg-primary/20" : "bg-muted/50"
              )}>
                <Image className={cn(
                  "h-12 w-12 transition-colors duration-300",
                  isDragActive ? "text-primary" : "text-muted-foreground"
                )} />
              </div>
              
              <div className="space-y-2">
                <p className="text-lg font-medium text-foreground">
                  {isDragActive
                    ? "Drop your images here!"
                    : "Drag & drop images here"}
                </p>
                <p className="text-muted-foreground">
                  or click to browse files
                </p>
                <p className="text-sm text-muted-foreground">
                  Supports JPG, PNG, GIF, WebP (max {maxFiles} files)
                </p>
              </div>
            </motion.div>
          </div>

          {acceptedFiles.length > 0 && (
            <motion.div
              initial={{ opacity: 0, height: 0 }}
              animate={{ opacity: 1, height: "auto" }}
              transition={{ duration: 0.3 }}
              className="space-y-2"
            >
              <h4 className="font-medium text-foreground">Selected Files:</h4>
              <div className="max-h-40 overflow-y-auto space-y-1">
                {acceptedFiles.map((file, index) => (
                  <motion.div
                    key={index}
                    initial={{ opacity: 0, x: -20 }}
                    animate={{ opacity: 1, x: 0 }}
                    transition={{ delay: index * 0.1 }}
                    className="flex items-center justify-between p-2 bg-muted/20 rounded"
                  >
                    <span className="text-sm text-foreground truncate">
                      {file.name}
                    </span>
                    <span className="text-xs text-muted-foreground">
                      {(file.size / 1024 / 1024).toFixed(2)} MB
                    </span>
                  </motion.div>
                ))}
              </div>
            </motion.div>
          )}

          <div className="flex justify-end space-x-3">
            <Button variant="outline" onClick={onClose}>
              Cancel
            </Button>
            <Button
              onClick={() => onDrop([...acceptedFiles])}
              disabled={acceptedFiles.length === 0}
              className="bg-gradient-primary hover:shadow-glow transition-all duration-300"
            >
              Upload {acceptedFiles.length} {acceptedFiles.length === 1 ? 'Image' : 'Images'}
            </Button>
          </div>
        </motion.div>
      </DialogContent>
    </Dialog>
  );
};